---
// Import the Button component from the portfolio-next project.
// The original theme-toggle.tsx used "@components/ui/button", which in its Next.js context,
// resolved to "portfolio-next/components/ui/button".
// In this Astro component, we use a relative path to access it.
import { Button } from '../../portfolio-next/components/ui/button'
import { Sun, Moon } from 'lucide-react'
---

<Button variant="outline" size="icon" id="themeToggleAstro" title="Toggle theme" client:load>
  <Sun
    className="h-[1.2rem] w-[1.2rem] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90"
  />
  <Moon
    className="absolute h-[1.2rem] w-[1.2rem] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0"
  />
  <span class="sr-only">Toggle theme</span>
</Button>

<script is:inline>
  const applyTheme = (theme) => {
    if (theme === 'light') {
      document.documentElement.classList.remove('dark')
    } else {
      document.documentElement.classList.add('dark')
    }
  }
  const storeTheme = (theme) => {
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('theme', theme)
    }
  }
  const getCurrentTheme = () => {
    let preferredTheme = 'light' // Default theme

    // 1. Check localStorage
    if (typeof localStorage !== 'undefined') {
      const storedTheme = localStorage.getItem('theme')
      if (storedTheme === 'light' || storedTheme === 'dark') {
        return storedTheme
      }
    }

    // 2. Check prefers-color-scheme
    if (
      typeof window !== 'undefined' &&
      window.matchMedia &&
      window.matchMedia('(prefers-color-scheme: dark)').matches
    ) {
      preferredTheme = 'dark'
    }

    return preferredTheme
  }
  document.addEventListener('astro:after-swap', () => {
    // Apply the theme to the document
    applyTheme(getCurrentTheme())
  })
  // Initialize theme on page load
  const currentTheme = getCurrentTheme()
  applyTheme(currentTheme)
  // Also store the determined theme (especially if it came from prefers-color-scheme and wasn't in localStorage yet)
  storeTheme(currentTheme)
  document.addEventListener('astro:page-load', () => {
    const themeToggleBtn = document.getElementById('themeToggleAstro')
    if (themeToggleBtn) {
      // Handle toggle click
      const handleToggleClick = () => {
        const element = document.documentElement
        element.classList.toggle('dark')
        const isDark = element.classList.contains('dark')
        const newTheme = isDark ? 'dark' : 'light'
        storeTheme(newTheme)
      }
      themeToggleBtn.addEventListener('click', handleToggleClick)
    } else {
      console.error("Theme toggle button with id 'themeToggleAstro' not found.")
    }
  })
</script>
