---
import { LOCALE_COOKIE, defaultLocale, locales } from '@i18n/utils'

function getLocaleFromUrl(url: URL) {
  const [, locale] = url.pathname.split('/')
  // console.log(
  //   `locale: ${locale}, url: ${url.pathname}, defaultLocale: ${defaultLocale}, locales: `,
  //   locales,
  //   (locales as readonly string[]).includes(locale)
  // )
  if ((locales as readonly string[]).includes(locale)) return locale as (typeof locales)[number]
  return defaultLocale
}

const locale = getLocaleFromUrl(Astro.url) as string
// console.log('locale:', locale)
---

<div class="">
  <select
    id="locale-select"
    aria-label="Locale Select"
    name="choice"
    class="flags flex w-[42px] appearance-none space-y-5 rounded-full border border-gray-300 bg-gray-100 p-1.5 px-2.5 text-lg outline-none focus:border-gray-500 dark:border-gray-600 dark:bg-gray-800 dark:focus:border-gray-400"
  >
    <option value="en" selected={locale === 'en' ? 'selected' : ''}>ðŸ‡ºðŸ‡¸ English &nbsp;</option>
    <option value="tw" selected={locale === 'tw' ? 'selected' : ''}>ðŸ‡¹ðŸ‡¼ Taiwan &nbsp;</option>
  </select>
</div>

<script define:vars={{ locale, defaultLocale, LOCALE_COOKIE }}>
  document.addEventListener('astro:page-load', () => {
    // This runs on first page load and after every navigation.
    const localeSelect = document.getElementById('locale-select')
    if (localeSelect) {
      localeSelect.addEventListener('change', (e) => {
        const selectedLocale = e.target.value
        const pathnameWithoutLocale = window.location.pathname.replace(`/${locale}`, '')
        const pathnameWithNewLocale =
          selectedLocale === defaultLocale
            ? pathnameWithoutLocale || '/'
            : `/${selectedLocale}${pathnameWithoutLocale === '/' ? '' : pathnameWithoutLocale}`
        // console.log({
        //   selectedLocale,
        //   locale,
        //   defaultLocale,
        //   pathnameWithoutLocale,
        //   pathnameWithNewLocale,
        // })
        document.cookie = `${LOCALE_COOKIE}=${selectedLocale};path=/;max-age=31536000;samesite=strict;`
        window.location.pathname = pathnameWithNewLocale
      })
    }
  })
</script>

<style>
  /* noto-color-emoji-emoji-400-normal */
  @font-face {
    font-family: 'Noto Color Emoji';
    font-style: normal;
    font-display: swap;
    font-weight: 400;
    src:
      url(@fontsource/noto-color-emoji/files/noto-color-emoji-emoji-400-normal.woff2)
        format('woff2'),
      url(@fontsource/noto-color-emoji/files/noto-color-emoji-emoji-400-normal.woff) format('woff');
  }

  .flags {
    font-family: 'Noto Color Emoji', sans-serif;
  }
</style>
