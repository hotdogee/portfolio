---
import { Image } from 'astro:assets'
import { getRelativeLocaleUrl } from 'astro:i18n'
import { Menu, Search, X } from 'lucide-react'
import profile from '@assets/profile.jpg'
import { Button } from '@components/ui/button'
import { Link } from '@components/ui/link'
import { defaultLocale, useTranslations } from '@lib/utils'
import LanguageSwitcher from './LanguageSwitcher.astro'
import ThemeToggle from './ThemeToggle.astro'

const { locale } = Astro.params
const currentLocale = locale ?? defaultLocale
const t = useTranslations(locale)

// Navigation links
const navLinks = [
  // { href: undefined, label: t('nav.home') },
  { href: '/about', label: t('nav.about') },
  { href: '/projects', label: t('nav.projects') },
  { href: '/expertise', label: t('nav.expertise') },
  { href: '/experience', label: t('nav.experience') },
  { href: '/research', label: t('nav.research') },
  { href: '/articles', label: t('nav.blog') },
  { href: '/contact', label: t('nav.contact') },
]
interface Props {
  showCta?: boolean
}
const { showCta = false } = Astro.props as Props
// console.log('Astro.url.pathname', Astro.url.pathname)
---

<header
  class="bg-background/95 supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50 w-full backdrop-blur"
>
  <div class="container flex h-16 items-center justify-between border-b">
    <div class="flex items-center gap-2 transition-transform hover:scale-110">
      <a
        transition:persist
        href={getRelativeLocaleUrl(currentLocale, undefined)}
        class:list={[
          'relative flex size-12 items-center justify-center rounded-full',
          {
            'active before:absolute before:inset-0 before:z-[-1] before:rounded-full before:bg-gradient-to-r before:from-[#59ed4f] before:to-[#05b7ff] dark:before:from-[#118324] dark:before:to-[#2575fc]':
              Astro.url.pathname === '/en' || Astro.url.pathname === '/tw',
          },
        ]}
        style={`view-transition-name: nav-0;`}
      >
        <Image src={profile} class="size-10 rounded-full" alt="Profile Picture" />
      </a>
      <a
        href={getRelativeLocaleUrl(currentLocale, undefined)}
        class="text-xl font-bold tracking-tight"
      >
        {t('name')}
      </a>
    </div>

    <!-- Desktop Navigation -->
    <nav class="hidden items-center gap-1 lg:flex">
      {
        navLinks.map((link, index) => (
          <a
            href={getRelativeLocaleUrl(currentLocale, link.href)}
            class:list={[
              'relative px-4 py-2 text-sm font-medium',
              {
                'active before:absolute before:inset-0 before:z-[-1] before:rounded-xl before:bg-gradient-to-r before:from-[#59ed4f] before:to-[#05b7ff] dark:before:from-[#118324] dark:before:to-[#2575fc]':
                  Astro.url.pathname.includes(link.href),
                'hover:text-primary': !Astro.url.pathname.includes(link.href),
              },
            ]}
            style={`view-transition-name: nav-${index + 1};`}
          >
            {link.label}
          </a>
        ))
      }
    </nav>
    <div class="flex items-center gap-2">
      <Link
        href={getRelativeLocaleUrl(currentLocale, '/search')}
        variant="outline"
        size="icon"
        title="Search"
        id="search-button"
      >
        <Search />
        <span class="sr-only">Search</span>
      </Link>
      <LanguageSwitcher />
      <ThemeToggle />
      {
        showCta && (
          <Link
            href={getRelativeLocaleUrl(currentLocale, '/contact')}
            className="hidden lg:inline-flex"
          >
            {t('button.contact')}
          </Link>
        )
      }
      <Button variant="outline" size="icon" id="menu-toggle" className="lg:hidden">
        <X className="menu-icon hidden h-5 w-5" />
        <Menu className="close-icon h-5 w-5" />
      </Button>
    </div>
  </div>
  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="mobile-menu-hidden border-b lg:hidden">
    <div class="container flex flex-col space-y-4 py-4 text-center">
      {
        navLinks.map((link, index) => (
          <a
            href={getRelativeLocaleUrl(currentLocale, link.href)}
            class:list={[
              'relative py-2 text-sm font-medium',
              {
                'active before:absolute before:inset-0 before:z-[-1] before:rounded-xl before:bg-gradient-to-r before:from-[#59ed4f] before:to-[#05b7ff] dark:before:from-[#118324] dark:before:to-[#2575fc]':
                  Astro.url.pathname.includes(link.href),
                'hover:text-primary': !Astro.url.pathname.includes(link.href),
              },
            ]}
            style={`view-transition-name: nav-${index + 1};`}
          >
            {link.label}
          </a>
        ))
      }
      {
        showCta && (
          <Link href={getRelativeLocaleUrl(currentLocale, '/contact')} className="w-full">
            {t('button.contact')}
          </Link>
        )
      }
    </div>
  </div>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const menuToggle = document.getElementById('menu-toggle')
    const mobileMenu = document.getElementById('mobile-menu')
    const menuIcon = document.querySelector('.menu-icon')
    const closeIcon = document.querySelector('.close-icon')
    if (menuToggle && mobileMenu && menuIcon && closeIcon) {
      menuToggle.addEventListener('click', () => {
        mobileMenu.classList.toggle('mobile-menu-hidden')
        mobileMenu.classList.toggle('mobile-menu-visible')
        menuIcon.classList.toggle('hidden')
        closeIcon.classList.toggle('hidden')
      })
      // Also close menu when clicking on mobile navigation links
      const mobileLinks = mobileMenu.querySelectorAll('a')
      mobileLinks.forEach((link) => {
        link.addEventListener('click', () => {
          mobileMenu.classList.add('mobile-menu-hidden')
          mobileMenu.classList.remove('mobile-menu-visible')
          menuIcon.classList.remove('hidden')
          closeIcon.classList.add('hidden')
        })
      })
    }
    // const searchButton = document.getElementById('search-button')
    // document.addEventListener('astro:before-swap', (event) => {
    //   event.newDocument.getElementById('search-button')?.classList.add('dark:bg-accent')
    // })
    // document.addEventListener('astro:after-swap', (event) => {
    //   document.getElementById('search-button')?.classList.add('dark:bg-accent')
    // })
    // if (searchButton) {
    //   searchButton.addEventListener('mouseover', () => {
    //     searchButton.classList.add('dark:bg-accent')
    //   })
    //   searchButton.addEventListener('mouseout', () => {
    //     searchButton.classList.remove('dark:bg-accent')
    //   })
    // }
  })
</script>

<style is:inline>
  /* Mobile menu transitions */
  .mobile-menu-hidden {
    opacity: 0;
    max-height: 0;
    overflow: hidden;
    transition:
      opacity 0.3s ease-in-out,
      max-height 0.3s ease-in-out;
  }

  .mobile-menu-visible {
    opacity: 1;
    max-height: 500px;
    transition:
      opacity 0.3s ease-in-out,
      max-height 0.3s ease-in-out;
  }

  /* #search-button:hover {
    view-transition-class: hover;
  }
  ::view-transition-old(.hover),
  ::view-transition-new(.hover) {
    background-color: var(--accent);
  } */

  @layer nav {
    a {
      view-transition-class: nav-item;
    }

    a.active::before {
      view-transition-name: active-nav-elem;
    }

    ::view-transition-old(active-nav-elem),
    ::view-transition-new(active-nav-elem) {
      height: 100%;
    }

    ::view-transition-group(.nav-item) {
      z-index: 1;
    }

    ::view-transition-group(active-nav-elem) {
      animation-duration: 0.375s;
    }

    ::view-transition-group(root) {
      pointer-events: none;
    }

    ::view-transition-group(nav-0) {
      z-index: 1;
    }
    ::view-transition-group(nav-1) {
      z-index: 1;
    }
    ::view-transition-group(nav-2) {
      z-index: 1;
    }
    ::view-transition-group(nav-3) {
      z-index: 1;
    }
    ::view-transition-group(nav-4) {
      z-index: 1;
    }
    ::view-transition-group(nav-5) {
      z-index: 1;
    }
    ::view-transition-group(nav-6) {
      z-index: 1;
    }
    ::view-transition-group(nav-7) {
      z-index: 1;
    }
    ::view-transition-group(nav-8) {
      z-index: 1;
    }
    ::view-transition-group(nav-9) {
      z-index: 1;
    }
  }
</style>
